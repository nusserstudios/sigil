// Hero Base - Reusable Structure for Multiple Hero Variants
@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;

// Hero Base Class - Use this as foundation for all hero types
.hero {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    
    // Section color support (base layer)
    background-color: var(--section-color, transparent);
    
    // All background and overlay layers - semantic naming
    .background-image,
    .background-color,
    .background-video,
    .animated-svg-overlay,
    .static-svg-overlay,
    .color-overlay,
    .gradient-overlay,
    .pattern-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
    }
    
    // Layer Z-Index Stack (bottom to top)
    // Base background layers (z-index: 1)
    .background-image,
    .background-color,
    .background-video {
        z-index: 1;
    }
    
    // Background Image Layer
    .background-image {
        background-image: var(--background-image);
        background-repeat: no-repeat;
        background-size: var(--background-image-size, cover);
        background-position: var(--background-image-position, center);
        opacity: var(--background-opacity, 1);
        mix-blend-mode: var(--background-blend-mode, normal);
    }
    
    // Background Color Layer
    .background-color {
        background-color: var(--background-color-light, transparent);
        opacity: var(--background-opacity, 1);
        mix-blend-mode: var(--background-blend-mode, normal);
        
        // Dark mode support
        @media (prefers-color-scheme: dark) {
            background-color: var(--background-color-dark, var(--background-color-light, transparent));
        }
        
        :root[data-theme="dark"] &,
        .dark & {
            background-color: var(--background-color-dark, var(--background-color-light, transparent));
        }
    }
    
    // Background Video Layer
    .background-video {
        video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            opacity: var(--background-opacity, 1);
            mix-blend-mode: var(--background-blend-mode, normal);
        }
        
        // Video fallback and optimization
        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.1);
            z-index: 1;
            pointer-events: none;
        }
        
        // Ensure video is behind content
        z-index: 1;
        
        // Video source optimization
        source {
            // Ensure proper source handling
            display: block;
        }
        
        // Video format optimization
        video[data-format="webm"] {
            // WebM specific optimizations
            will-change: transform;
        }
        
        video[data-format="mp4"] {
            // MP4 specific optimizations
            will-change: transform;
        }
        
        video[data-format="ogg"] {
            // OGG specific optimizations
            will-change: transform;
        }
        
        // Video quality optimization
        video[data-quality="high"] {
            // High quality video optimizations
            image-rendering: -webkit-optimize-contrast;
            image-rendering: crisp-edges;
        }
        
        video[data-quality="medium"] {
            // Medium quality video optimizations
            image-rendering: auto;
        }
        
        video[data-quality="low"] {
            // Low quality video optimizations
            image-rendering: pixelated;
        }
        
        // Video orientation optimization
        video[data-orientation="landscape"] {
            // Landscape video optimizations
            object-fit: cover;
        }
        
        video[data-orientation="portrait"] {
            // Portrait video optimizations
            object-fit: cover;
        }
        
        video[data-orientation="square"] {
            // Square video optimizations
            object-fit: cover;
        }
        
        // Video aspect ratio optimization
        video[data-aspect-ratio="16:9"] {
            // 16:9 aspect ratio optimizations
            object-fit: cover;
        }
        
        video[data-aspect-ratio="4:3"] {
            // 4:3 aspect ratio optimizations
            object-fit: cover;
        }
        
        video[data-aspect-ratio="1:1"] {
            // 1:1 aspect ratio optimizations
            object-fit: cover;
        }
        
        video[data-aspect-ratio="21:9"] {
            // 21:9 aspect ratio optimizations
            object-fit: cover;
        }
        
        // Video bitrate optimization
        video[data-bitrate="high"] {
            // High bitrate video optimizations
            image-rendering: -webkit-optimize-contrast;
        }
        
        video[data-bitrate="medium"] {
            // Medium bitrate video optimizations
            image-rendering: auto;
        }
        
        video[data-bitrate="low"] {
            // Low bitrate video optimizations
            image-rendering: pixelated;
        }
        
        // Video codec optimization
        video[data-codec="h264"] {
            // H.264 codec optimizations
            image-rendering: auto;
        }
        
        video[data-codec="h265"] {
            // H.265 codec optimizations
            image-rendering: auto;
        }
        
        video[data-codec="vp8"] {
            // VP8 codec optimizations
            image-rendering: auto;
        }
        
        video[data-codec="vp9"] {
            // VP9 codec optimizations
            image-rendering: auto;
        }
        
        // Video optimization for mobile
        @media (width <= 768px) {
            video {
                object-fit: cover;
            }
        }
        
        // Video optimization for small screens
        @media (width <= 480px) {
            video {
                object-fit: cover;
            }
        }
        
        // Video optimization for reduced motion
        @media (prefers-reduced-motion: reduce) {
            video {
                animation: none;
            }
        }
        
        // Video optimization for print
        @media print {
            display: none;
        }
        
        // Video loading state
        &:not(:has(video[readyState="4"])) {
            &::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 40px;
                height: 40px;
                border: 3px solid rgba(255, 255, 255, 0.3);
                border-top: 3px solid rgba(255, 255, 255, 0.8);
                border-radius: 50%;
                animation: spin 1s linear infinite;
                z-index: 2;
            }
        }
    }
    
    // Video loading animation
    @keyframes spin {
        0% { transform: translate(-50%, -50%) rotate(0deg); }
        100% { transform: translate(-50%, -50%) rotate(360deg); }
    }
    
    // SVG overlay layers (z-index: 2-3)
    .animated-svg-overlay,
    .static-svg-overlay {
        z-index: 2;
        background-repeat: no-repeat;
        background-size: var(--svg-background-size, cover);
        background-position: var(--svg-background-position, center);
        opacity: var(--svg-opacity, 1);
        mix-blend-mode: var(--svg-blend-mode, normal);
        transition: opacity 0.3s ease, mix-blend-mode 0.3s ease;
        
        // Default animation speed (normal) - must come before @supports
        animation-duration: 1.5s;
        animation-timing-function: ease-in-out;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        
        // Animation speed control
        &[data-animation-speed="slow"] {
            animation-duration: 3s !important;
        }
        
        &[data-animation-speed="fast"] {
            animation-duration: 0.5s !important;
        }
        
        // Fallback for browsers that don't support mix-blend-mode
        @supports not (mix-blend-mode: normal) {
            mix-blend-mode: normal;
            opacity: calc(var(--svg-opacity, 1) * 0.8);
        }
        
        // Responsive behavior
        @media (width <= 768px) {
            animation-duration: 2s; // Slightly slower on mobile for better performance
        }
        
        @media (width <= 480px) {
            animation-duration: 2.5s; // Even slower on small screens
        }
        
        // Blend mode optimizations
        &[style*="mix-blend-mode: multiply"],
        &[style*="mix-blend-mode: darken"] {
            filter: brightness(1.1) contrast(1.1);
        }
        
        &[style*="mix-blend-mode: screen"],
        &[style*="mix-blend-mode: lighten"] {
            filter: brightness(0.9) contrast(1.1);
        }
        
        // Content-specific optimizations
        .hero:has(.content) & {
            // Ensure SVG doesn't interfere with text readability
            filter: contrast(1.1);
        }
        
        // Video-specific content optimizations
        .hero:has(.background-video):has(.content) & {
            // Enhanced backdrop for video backgrounds with content
            opacity: calc(var(--svg-opacity, 1) * 0.9);
        }
        
        // Optimize for different background types
        .hero:has(.background-image) & {
            opacity: calc(var(--svg-opacity, 1) * 0.9);
        }
        
        .hero:has(.background-color) & {
            opacity: calc(var(--svg-opacity, 1) * 1.1);
        }
        
        // Optimize for different overlay types
        .hero:has(.color-overlay) &,
        .hero:has(.gradient-overlay) & {
            opacity: calc(var(--svg-opacity, 1) * 0.8);
        }
        
        // Video-specific overlay optimizations
        .hero:has(.background-video):has(.color-overlay) &,
        .hero:has(.background-video):has(.gradient-overlay) & {
            opacity: calc(var(--svg-opacity, 1) * 0.7);
        }
        
        // Ensure SVG works well with pattern overlays
        .hero:has(.pattern-overlay) & {
            opacity: calc(var(--svg-opacity, 1) * 0.7);
        }
        
        // Video-specific pattern overlay optimizations
        .hero:has(.background-video):has(.pattern-overlay) & {
            opacity: calc(var(--svg-opacity, 1) * 0.6);
        }
        
        // Loading state optimizations
        .hero:not(:has(.content)) & {
            // Reduce animation when content is loading
            animation-play-state: paused;
        }
        
        // Video loading state optimizations
        .hero:has(.background-video):not(:has(.content)) & {
            // Reduce animation when video is loading
            animation-play-state: paused;
            opacity: calc(var(--svg-opacity, 1) * 0.8);
        }
        
        // Performance optimizations for reduced motion
        @media (prefers-reduced-motion: reduce) {
            animation-play-state: paused;
            transition: none;
        }
        
        // Video performance optimizations
        .hero:has(.background-video) {
            // Optimize video performance
            will-change: transform;
            transform: translateZ(0);
        }
        
        // High contrast mode support
        @media (prefers-contrast: high) {
            filter: contrast(1.5) brightness(1.2);
        }
        
        // Video high contrast mode support
        .hero:has(.background-video) {
            @media (prefers-contrast: high) {
                .background-video::before {
                    background: rgba(0, 0, 0, 0.4);
                }
            }
        }
        
        // Viewport-specific optimizations
        @media (orientation: landscape) and (max-height: 500px) {
            // Reduce animation on short landscape screens
            animation-duration: 2.5s;
        }
        
        // Video viewport-specific optimizations
        .hero:has(.background-video) {
            @media (orientation: landscape) and (max-height: 500px) {
                .background-video video {
                    object-fit: cover;
                }
            }
        }
        
        @media (orientation: portrait) and (max-width: 500px) {
            // Optimize for narrow portrait screens
            background-size: contain;
            animation-duration: 2s;
        }
        
        // Video portrait orientation optimizations
        .hero:has(.background-video) {
            @media (orientation: portrait) and (max-width: 500px) {
                .background-video video {
                    object-fit: cover;
                }
            }
        }
        
        // Large screen optimizations
        @media (min-width: 1440px) {
            // Enhance animation on large screens
            animation-duration: 1.2s;
        }
        
        // Video large screen optimizations
        .hero:has(.background-video) {
            @media (min-width: 1440px) {
                .background-video video {
                    object-fit: cover;
                }
            }
        }
        
        // Theme-specific optimizations
        :root[data-theme="dark"] &,
        .dark & {
            // Enhance visibility in dark mode
            filter: brightness(1.1) contrast(1.2);
        }
        
        // Video theme-specific optimizations
        .hero:has(.background-video) {
            :root[data-theme="dark"] &,
            .dark & {
                .background-video::before {
                    background: rgba(0, 0, 0, 0.3);
                }
            }
        }
        
        :root[data-theme="light"] &,
        .light & {
            // Optimize for light mode
            filter: brightness(0.95) contrast(1.1);
        }
        
        // Video light theme optimizations
        .hero:has(.background-video) {
            :root[data-theme="light"] &,
            .light & {
                .background-video::before {
                    background: rgba(0, 0, 0, 0.2);
                }
            }
        }
        
        // Color scheme optimizations
        @media (prefers-color-scheme: dark) {
            filter: brightness(1.1) contrast(1.2);
        }
        
        @media (prefers-color-scheme: light) {
            filter: brightness(0.95) contrast(1.1);
        }
        
        // Video color scheme optimizations
        .hero:has(.background-video) {
            @media (prefers-color-scheme: dark) {
                .background-video::before {
                    background: rgba(0, 0, 0, 0.3);
                }
            }
            
            @media (prefers-color-scheme: light) {
                .background-video::before {
                    background: rgba(0, 0, 0, 0.2);
                }
            }
        }
        
        // Interaction state optimizations
        .hero:hover & {
            // Enhance animation on hover
            animation-duration: 1s;
            filter: brightness(1.1) contrast(1.1);
        }
        
        // Video interaction state optimizations
        .hero:has(.background-video):hover {
            .background-video::before {
                background: rgba(0, 0, 0, 0.2);
            }
        }
        
        .hero:focus-within & {
            // Optimize when content is focused
            animation-duration: 1.2s;
            filter: brightness(1.05) contrast(1.1);
        }
        
        // Video focus state optimizations
        .hero:has(.background-video):focus-within {
            .background-video::before {
                background: rgba(0, 0, 0, 0.25);
            }
        }
        
        // Print optimizations
        @media print {
            animation: none;
            opacity: 0.3;
        }
        
        // Video print optimizations
        .hero:has(.background-video) {
            @media print {
                .background-video {
                    display: none;
                }
            }
        }
    }
    
    .animated-svg-overlay {
        background-image: var(--animated-svg-background);
    }
    
    .static-svg-overlay {
        background-image: var(--static-svg-background);
    }
    
    // Pattern overlays (z-index: 3)
    .pattern-overlay {
        z-index: 3;
        background-image: var(--pattern-background);
        background-repeat: repeat;
        background-size: var(--pattern-size, 100px);
        opacity: var(--pattern-opacity, 0.1);
        mix-blend-mode: var(--pattern-blend-mode, multiply);
    }
    
    // Color/gradient overlays (z-index: 5)
    .color-overlay,
    .gradient-overlay {
        z-index: 5;
        opacity: var(--overlay-opacity, 0.5);
        mix-blend-mode: var(--overlay-blend-mode, normal);
    }
    
    .color-overlay {
        background-color: var(--overlay-color, transparent);
    }
    
    .gradient-overlay {
        background: var(--overlay-gradient, transparent);
    }
    
    // Content Layer (z-index: 10)
    .content {
        position: relative;
        z-index: 10;
        width: 100%;
        display: flex;
        flex-direction: column;
        
        // Adaptive backdrop for readability
        &::before {
            content: '';
            position: absolute;
            top: -2rem;
            left: -2rem;
            right: -2rem;
            bottom: -2rem;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            z-index: -1;
            opacity: 0;
            transition: opacity 0.3s ease;
            backdrop-filter: blur(1px);
        }
        
        // Show backdrop when any background layers are present
        .hero:has(.background-image) &::before,
        .hero:has(.background-color) &::before,
        .hero:has(.background-video) &::before,
        .hero:has(.animated-svg-overlay) &::before,
        .hero:has(.static-svg-overlay) &::before,
        .hero:has(.pattern-overlay) &::before,
        .hero:has(.color-overlay) &::before,
        .hero:has(.gradient-overlay) &::before {
            opacity: 0.2;
        }
        
        // Enhanced backdrop for video backgrounds
        .hero:has(.background-video) &::before {
            opacity: 0.3;
            background: rgba(0, 0, 0, 0.25);
        }
        
        // Enhanced backdrop for multiple layers
        .hero:has(.animated-svg-overlay):has(.background-image) &::before,
        .hero:has(.color-overlay):has(.background-image) &::before,
        .hero:has(.pattern-overlay):has(.background-image) &::before {
            opacity: 0.4;
            background: rgba(0, 0, 0, 0.2);
        }
        
        // Enhanced backdrop for video with overlays
        .hero:has(.animated-svg-overlay):has(.background-video) &::before,
        .hero:has(.color-overlay):has(.background-video) &::before,
        .hero:has(.pattern-overlay):has(.background-video) &::before {
            opacity: 0.5;
            background: rgba(0, 0, 0, 0.3);
        }
    }
    
    // Typography Base Styles
    .heading {
        margin: 0;
        line-height: 1.2;
        font-weight: bold;
        
        // Light mode color (default)
        color: var(--heading-color-light, inherit);
        
        // Dark mode color support
        @media (prefers-color-scheme: dark) {
            color: var(--heading-color-dark, var(--heading-color-light, inherit));
        }
        
        // Force dark mode when body has dark class
        :root[data-theme="dark"] &,
        .dark & {
            color: var(--heading-color-dark, var(--heading-color-light, inherit));
        }
    }
    
    .text {
        margin: 0;
        line-height: 1.4;
        
        // Light mode color (default)
        color: var(--text-color-light, inherit);
        
        // Dark mode color support
        @media (prefers-color-scheme: dark) {
            color: var(--text-color-dark, var(--text-color-light, inherit));
        }
        
        // Force dark mode when body has dark class
        :root[data-theme="dark"] &,
        .dark & {
            color: var(--text-color-dark, var(--text-color-light, inherit));
        }
    }
    
    .actions {
        margin-top: var(--space-s);
    }
    
    .btn {
        display: inline-block;
        padding: 1rem 2rem;
        background: var(--primary);
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        
        &:hover,
        &:focus {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
            color: white;
            text-decoration: none;
            background: var(--primary-hover);
        }
        
        &:focus {
            outline: 2px solid var(--primary-hover);
            outline-offset: 2px;
        }
    }
}

// Breakout Grid Support
.hero.breakout-wide {
    width: 100%;
}

.hero.breakout-full {
    width: 100%;
    max-width: none;
}

// Accessibility Support
@media (prefers-contrast: high) {
    .hero .content::before {
        opacity: 0.6 !important;
        background: rgba(0, 0, 0, 0.8);
    }
}

// Reduced Motion Support
@media (prefers-reduced-motion: reduce) {
    .hero {
        .animated-svg-overlay,
        .background-video video {
            // Animations are handled by the content itself
            // This ensures layers remain but motion stops
            filter: none;
        }
        
        .content::before {
            transition: none;
        }
    }
}

// Enhanced Blend Mode Support
@supports (mix-blend-mode: multiply) {
    .hero {
        .background-image,
        .background-color,
        .background-video,
        .animated-svg-overlay,
        .static-svg-overlay,
        .pattern-overlay,
        .color-overlay,
        .gradient-overlay {
            isolation: isolate;
        }
    }
}

// Fallback for Browsers Without Blend Mode Support
@supports not (mix-blend-mode: multiply) {
    .hero {
        .background-image,
        .background-color,
        .background-video,
        .animated-svg-overlay,
        .static-svg-overlay,
        .pattern-overlay {
            mix-blend-mode: normal !important;
        }
        
        .color-overlay,
        .gradient-overlay {
            mix-blend-mode: normal !important;
            opacity: calc(var(--overlay-opacity, 0.5) * 0.7);
        }
    }
}

// Print Styles
@media print {
    .hero {
        .background-video,
        .animated-svg-overlay,
        .static-svg-overlay,
        .pattern-overlay,
        .color-overlay,
        .gradient-overlay {
            display: none;
        }
        
        .background-image,
        .background-color {
            opacity: 0.1 !important;
        }
    }
}
