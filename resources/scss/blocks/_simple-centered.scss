// Simple Centered Block Styles
@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;

.wp-block-sigil-simple-centered {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-l-3xl);
    margin-block-end: var(--space-m-l);
    text-align: center;
    overflow: hidden;
    min-height: 50vh;
    
    // Section color support (base layer)
    background-color: var(--section-color, var(--background-color-light, transparent));

    @supports (min-height: 50dvh) {
        min-height: 50dvh;
    }
    
    // Dark mode background color
    @media (prefers-color-scheme: dark) {
        background-color: var(--background-color-dark, var(--background-color-light, transparent));
    }
    
    // Force dark mode when body has dark class
    :root[data-theme="dark"] &,
    .dark & {
        background-color: var(--background-color-dark, var(--background-color-light, transparent));
    }
    
    // Background image support with enhanced positioning
    &[data-background-type="image"] {
        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: var(--background-image);
            background-repeat: no-repeat;
            opacity: var(--background-opacity, 1);
            mix-blend-mode: var(--background-blend-mode, normal);
            z-index: 2;
            
            // Handle different fit options properly with CSS variables
            background-size: var(--background-image-size, cover);
            background-position: var(--background-image-position, center);
        }
    }
    
    // SVG background support with blend modes
    &[data-background-type="svg"] {
        .simple-centered__svg-background {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 2;
            pointer-events: none;
            
            svg {
                width: 100% !important;
                height: 100% !important;
                object-fit: cover;
                
                // Ensure proper aspect ratio and scaling (handled in SVG attributes)
                
                // Support for CSS custom properties in SVGs
                * {
                    color: inherit;
                }
                
                // CSS variables are handled directly in SVG attributes
                // No need to override specific colors as they use var() now
            }
        }
    }
    
    // Background color layer with blend mode support
    &[data-background-type="color"] {
        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--background-color-light, transparent);
            opacity: var(--background-opacity, 1);
            mix-blend-mode: var(--background-blend-mode, normal);
            z-index: 2;
            
            // Dark mode support
            @media (prefers-color-scheme: dark) {
                background-color: var(--background-color-dark, var(--background-color-light, transparent));
            }
            
            :root[data-theme="dark"] &,
            .dark & {
                background-color: var(--background-color-dark, var(--background-color-light, transparent));
            }
        }
    }
    
    // Overlay system
    .simple-centered__overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
        z-index: 5;
        
        // Color overlay
        &--color {
            background-color: var(--overlay-color, transparent);
            opacity: var(--overlay-opacity, 0.5);
            mix-blend-mode: var(--overlay-blend-mode, normal);
        }
        
        // Gradient overlay
        &--gradient {
            background: var(--overlay-gradient, transparent);
            opacity: var(--overlay-opacity, 0.5);
            mix-blend-mode: var(--overlay-blend-mode, normal);
        }
        
        // SVG overlay
        &--svg {
            svg {
                width: 100% !important;
                height: 100% !important;
                object-fit: cover;
                
                // Support for CSS custom properties in overlay SVGs
                * {
                    color: inherit;
                }
                
                // Use overlay-specific CSS variables
                // Colors are handled directly via CSS variables in SVG attributes
            }
        }
    }
    
    // Breakout variations - work with the breakout grid system
    &.breakout-wide {
        // Grid system will handle the wide breakout
        width: 100%;
    }
    
    &.breakout-full {
        // Grid system will handle the full breakout
        width: 100%;
        max-width: none;
    }
    
    // Content container with enhanced z-index management
    .simple-centered__content {
        position: relative;
        z-index: 10;
        width: 100%;
        max-width: 820px;
        display: flex;
        flex-direction: column;
        gap: var(--space-m);
        
        // Adaptive backdrop for readability
        &::before {
            content: '';
            position: absolute;
            top: -2rem;
            left: -2rem;
            right: -2rem;
            bottom: -2rem;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            z-index: -1;
            opacity: 0;
            transition: opacity 0.3s ease;
            backdrop-filter: blur(1px);
        }
        
        // Show backdrop when backgrounds or overlays are present
        .wp-block-sigil-simple-centered[data-background-type="image"] &::before,
        .wp-block-sigil-simple-centered[data-background-type="svg"] &::before,
        .wp-block-sigil-simple-centered[data-overlay-type="color"] &::before,
        .wp-block-sigil-simple-centered[data-overlay-type="svg"] &::before {
            opacity: 0.2;
        }
        
        // Enhanced backdrop for complex blend modes
        .wp-block-sigil-simple-centered[data-overlay-type="color"][data-overlay-type="svg"] &::before {
            opacity: 0.4;
            background: rgba(0, 0, 0, 0.2);
        }
    }
    
    // Heading styles with color support
    .simple-centered__heading {
        font-size: var(--font-3xl);
        margin: 0;
        line-height: 1.2;
        font-weight: bold;
        
        // Light mode color (default)
        color: var(--heading-color-light, inherit);
        
        // Dark mode color support
        @media (prefers-color-scheme: dark) {
            color: var(--heading-color-dark, var(--heading-color-light, inherit));
        }
        
        // Force dark mode when body has dark class
        :root[data-theme="dark"] &,
        .dark & {
            color: var(--heading-color-dark, var(--heading-color-light, inherit));
        }
    }
    
    // Text styles with color support
    .simple-centered__text {
        font-size: 1.2rem;
        margin: 0;
        line-height: 1.4;
        
        // Light mode color (default)
        color: var(--text-color-light, inherit);
        
        // Dark mode color support
        @media (prefers-color-scheme: dark) {
            color: var(--text-color-dark, var(--text-color-light, inherit));
        }
        
        // Force dark mode when body has dark class
        :root[data-theme="dark"] &,
        .dark & {
            color: var(--text-color-dark, var(--text-color-light, inherit));
        }
    }
    
    // Actions container
    .simple-centered__actions {
        margin-top: var(--space-s);
    }
    
    // Button styles
    .btn {
        display: inline-block;
        padding: 1rem 2rem;
        background: var(--primary);
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        
        &:hover,
        &:focus {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
            color: white;
            text-decoration: none;
            background: var(--primary-hover);
        }
        
        &:focus {
            outline: 2px solid var(--primary-hover);
            outline-offset: 2px;
        }
    }
    
    // Responsive adjustments
    @media (width <= 768px) {
        padding: var(--space-m-l);
        min-height: 30dvh;
        
        .simple-centered__heading {
            font-size: var(--font-2xl);
        }
        
        .simple-centered__text {
            font-size: 1.1rem;
        }
        
        .btn {
            padding: 0.875rem 1.5rem;
            font-size: 0.9rem;
        }
        
        // Adjust SVG background for mobile
        &[data-background-type=\"svg\"] .simple-centered__svg-background svg {
            object-fit: contain;
        }
    }
    
    @media (width <= 480px) {
        padding: var(--space-m);
        min-height: 25dvh;
        
        .simple-centered__heading {
            font-size: var(--font-xl);
        }
        
        .simple-centered__text {
            font-size: 1rem;
        }
        
        // Reduce backdrop opacity on small screens
        .simple-centered__content::before {
            opacity: 0.2 !important;
        }
    }
    
    // High contrast mode support
    @media (prefers-contrast: high) {
        .simple-centered__content::before {
            opacity: 0.6 !important;
            background: rgba(0, 0, 0, 0.8);
        }
    }
    
    // Reduced motion support for all animated elements
    @media (prefers-reduced-motion: reduce) {
        .simple-centered__svg-background svg *,
        .simple-centered__overlay--svg svg * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
        
        .simple-centered__content::before {
            transition: none;
        }
    }
    
    // Enhanced blend mode support for modern browsers
    @supports (mix-blend-mode: multiply) {
        .simple-centered__svg-background,
        .simple-centered__overlay {
            isolation: isolate;
        }
    }
    
    // Fallback for browsers without blend mode support
    @supports not (mix-blend-mode: multiply) {
        &[data-background-type="color"]::before,
        &[data-background-type="image"]::before {
            mix-blend-mode: normal !important;
        }
        
        .simple-centered__overlay {
            mix-blend-mode: normal !important;
            
            &--color {
                opacity: calc(var(--overlay-opacity, 0.5) * 0.7);
            }
        }
    }
    
    // Print styles
    @media print {
        .simple-centered__svg-background,
        .simple-centered__overlay--svg {
            display: none;
        }
        
        .simple-centered__overlay--color,
        .simple-centered__overlay--gradient {
            opacity: 0.1 !important;
        }
        
        &::before {
            opacity: 0.1 !important;
        }
    }
}